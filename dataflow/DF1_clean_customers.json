{
	"name": "DF1_clean_customers",
	"properties": {
		"folder": {
			"name": "DF1"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS1_SQL_raw_customers",
						"type": "DatasetReference"
					},
					"name": "source1",
					"description": "Import data from DS1_SQL_raw_customers and modify types accordingly"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS1_SQL_stage_customers",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"description": "Export data to AzureSqlTable1 "
				}
			],
			"transformations": [
				{
					"name": "AddDuplicate"
				},
				{
					"name": "RemoveDuplicate"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Email as string,",
				"          PhoneNumber as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          ZipCode as integer,",
				"          Country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 window(asc(CustomerID, true),",
				"     Duplicate = iif(lag(CustomerID) == CustomerID, true(), false()) ) ~> AddDuplicate",
				"AddDuplicate filter((!Duplicate) && (!isNull(Email))) ~> RemoveDuplicate",
				"RemoveDuplicate select(mapColumn(",
				"          CustomerID,",
				"          FirstName,",
				"          LastName,",
				"          Email,",
				"          PhoneNumber,",
				"          Address,",
				"          City,",
				"          State,",
				"          ZipCode,",
				"          Country",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}